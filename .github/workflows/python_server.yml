name: python_server

on:
  workflow_dispatch:

  pull_request:
    branches:
      - develop

jobs:
  ci:
    runs-on: self-hosted

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: cd backend && poetry install

      - name: Code analyze
        run: cd backend && poetry run black src --check && poetry run black tests --check

      - name: Tests
        env:
          APP_CONFIG__DB__URL: postgresql+asyncpg://postgres:postgres@localhost:5432/postgres
        run: cd backend && poetry run pytest --cov=src/core --cov-report=term-missing
